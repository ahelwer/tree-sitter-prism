mdp

const int M = 3;

module slushprocess1
	pc1 : [0 .. 4] init 0;
	
	col1 : [0 .. 2];

	r1 : [0 .. M] init 0;

	sampleRequest1_2: [0 .. 2] init 0;
	sampleRequest1_3: [0 .. 2] init 0;
	
	sampleResponseIter1_2: [0 .. M] init 0;
	sampleResponseIter1_3: [0 .. M] init 0;
	sampleResponse1_2: [1 .. 2];
	sampleResponse1_3: [1 .. 2];

	[] pc1 = 0 & !(col2 = 0 & col3 = 0) -> (pc1' = 1) & (col1' = 0);
	[] pc1 = 0 -> (pc1' = 1) & (col1' = 1);
	[] pc1 = 0 -> (pc1' = 1) & (col1' = 2);
	
	[] pc1 = 1 & r1 = M -> (pc1' = 4);
	[] pc1 = 1 & r1 < M & col1 = 0 -> (r1' = r1 + 1);
	[] pc1 = 1 & r1 < M & col1 != 0 -> (pc1' = 2) & (r1' = r1 + 1);

	[] pc1 = 2 ->
		0.5 : (pc1' = 3) & (sampleRequest1_2' = col1) +
		0.5 : (pc1' = 3) & (sampleRequest1_3' = col1);

	[] pc1 = 3
	& sampleRequest1_2 != 0
	& sampleResponseIter2_1 = r1 ->
		(pc1' = 1)
		& (col1' = sampleResponse2_1)
		& (sampleRequest1_2' = 0);
	[] pc1 = 3
	& sampleRequest1_3 != 0
	& sampleResponseIter3_1 = r1 ->
		(pc1' = 1)
		& (col1' = sampleResponse3_1)
		& (sampleRequest1_3' = 0);

	[] pc1 = 4 -> true;

	[] sampleRequest2_1 != 0 & sampleResponseIter1_2 < r2 & col1 != 0 ->
		(sampleResponseIter1_2' = r2) & (sampleResponse1_2' = col1);
	[] sampleRequest2_1 != 0 & sampleResponseIter1_2 < r2 & col1 = 0 ->
		(sampleResponseIter1_2' = r2) & (sampleResponse1_2' = sampleRequest2_1) & (col1' = sampleRequest2_1);

	[] sampleRequest3_1 != 0 & sampleResponseIter1_3 < r3 & col1 != 0 ->
		(sampleResponseIter1_3' = r3) & (sampleResponse1_3' = col1);
	[] sampleRequest3_1 != 0 & sampleResponseIter1_3 < r3 & col1 = 0 ->
		(sampleResponseIter1_3' = r3) & (sampleResponse1_3' = sampleRequest3_1) & (col1' = sampleRequest3_1);

endmodule

module slushprocess2 = slushprocess1[
	pc1 = pc2,
	col1 = col2,
	col2 = col3,
	col3 = col1,
	r1 = r2,
	r2 = r3,
	r3 = r1,
	sampleRequest1_2 = sampleRequest2_3,
	sampleRequest1_3 = sampleRequest2_1,
	sampleRequest2_1 = sampleRequest3_2,
	sampleRequest3_1 = sampleRequest1_2,
	sampleResponseIter1_2 = sampleResponseIter2_3,
	sampleResponseIter1_3 = sampleResponseIter2_1,
	sampleResponseIter2_1 = sampleResponseIter3_2,
	sampleResponseIter3_1 = sampleResponseIter1_2,
	sampleResponse1_2 = sampleResponse2_3,
	sampleResponse1_3 = sampleResponse2_1,
	sampleResponse2_1 = sampleResponse3_2,
	sampleResponse3_1 = sampleResponse1_2] endmodule

module slushprocess3 = slushprocess1[
	pc1 = pc3,
	col1 = col3,
	col2 = col1,
	col3 = col2,
	r1 = r3,
	r2 = r1,
	r3 = r2,
	sampleRequest1_2 = sampleRequest3_1,
	sampleRequest1_3 = sampleRequest3_2,
	sampleRequest2_1 = sampleRequest1_3,
	sampleRequest3_1 = sampleRequest2_3,
	sampleResponseIter1_2 = sampleResponseIter3_1,
	sampleResponseIter1_3 = sampleResponseIter3_2,
	sampleResponseIter2_1 = sampleResponseIter1_3,
	sampleResponseIter3_1 = sampleResponseIter2_3,
	sampleResponse1_2 = sampleResponse3_1,
	sampleResponse1_3 = sampleResponse3_2,
	sampleResponse2_1 = sampleResponse1_3,
	sampleResponse3_1 = sampleResponse2_3] endmodule
